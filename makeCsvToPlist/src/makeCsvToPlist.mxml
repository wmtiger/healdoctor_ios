<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="640" height="480">
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.utils.StringUtil;
			
			public var crtData:ArrayList;
			public var crtColData:ArrayList;
			
			private function setCSV_toJSON(csvFile:File, jiexiFun:Function):void
			{
				var fileToOpen:File = csvFile;
				var stream:FileStream = new FileStream();
				stream.openAsync(fileToOpen, FileMode.READ);
				stream.addEventListener(Event.COMPLETE, onOpenStream2);
				
				function onOpenStream2(event:Event):void
				{
					var stream:FileStream = event.target as FileStream;
					stream.removeEventListener(Event.COMPLETE, onOpenStream2);
					var fileData:String = stream.readUTFBytes(stream.bytesAvailable);
					fileData = StringUtil.restrict(fileData, "^\"");
					var temp:Array;
					if(fileData.indexOf("\r\n"))
					{
						temp = fileData.split("\r\n");
					}
					else
					{
						temp = fileData.split("\n");
					}
					trace(temp.length);
					var len:int = temp.length;
					var arrayList:Array = jiexiFun(temp);
					
					crtData = new ArrayList(arrayList);
					dataGrid.dataProvider = crtData;
					
					var str2:String = JSON.stringify(arrayList);
					var fn:String = fileToOpen.name.split(".")[0];
					createJsonFile(str2, fn);
				}
			}
			
			private function jiexiDrugCSV(temp:Array):Array 
			{
				var len:int = temp.length;
				var arrayList:Array = [];
				for(var i:int = 0; i < len; i++)
				{
					var cell:Array = (temp[i] as String).split(",");
					var obj:Object = {};
					obj.name = cell[0];
					obj.price = cell[1];
					obj.isChufang = cell[2];
					obj.drugType = cell[3];
					obj.hasYibao = cell[4];
					obj.py = PYConvert2.convertString(obj.name);
					
					arrayList.push(obj);
				}
				return arrayList;
			}
			
			private function jiexiHospitalCSV(temp:Array):Array 
			{
				var len:int = temp.length;
				var arrayList:Array = [];
				for(var i:int = 0; i < len; i++)
				{
					var cell:Array = (temp[i] as String).split(",");
					var obj:Object = {};
					obj.name = cell[0];
					obj.state = cell[1];
					obj.city = cell[2];
					obj.address = cell[3];
					obj.level = cell[4];
					obj.feature = cell[5];
					obj.isYibao = cell[6];
					obj.py = PYConvert2.convertString(obj.name);
					
					arrayList.push(obj);
				}
				return arrayList;
			}
			
			protected function loadCSV_clickHandler(event:MouseEvent):void
			{
				var txtFilter:FileFilter = new FileFilter("Text", "*.csv");
				var fileToOpen:File = new File();
				
				try 
				{
					fileToOpen.browseForOpen("选择csv", [txtFilter]);
					fileToOpen.addEventListener(Event.SELECT, fileSelected);
				}
				catch (error:Error)
				{
					trace("Failed:", error.message);
				}
				
				function fileSelected(event:Event):void 
				{
					if(fileToOpen.name.indexOf("drug"))
					{
						setCSV_toJSON(fileToOpen, jiexiDrugCSV);
					}
					else if(fileToOpen.name.indexOf("hospital"))
					{
						setCSV_toJSON(fileToOpen, jiexiHospitalCSV);
					}
				}
				
			}
			
			
			protected function createJsonFile(data:String, fileName:String):void
			{
				if(fileName == "")
					return;
				var fn:String = fileName + ".json";
				
				var file:File = File.desktopDirectory.resolvePath(fn);
				var fs:FileStream = new FileStream();
				try
				{
					fs.open(file, FileMode.WRITE);
					fs.writeUTFBytes(data);
				}
				catch(e:Error)
				{
					
				}
				fs.close();
				Alert.show("导出 "+fn+" 完成","提示");
			}
			
			protected function exportNamePY_clickHandler(event:MouseEvent):void
			{
				var txtFilter:FileFilter = new FileFilter("Text", "*.json");
				var fileToOpen:File = new File();
				
				try 
				{
					fileToOpen.browseForOpen("选择json", [txtFilter]);
					fileToOpen.addEventListener(Event.SELECT, fileSelected);
				}
				catch (error:Error)
				{
					trace("Failed:", error.message);
				}
				
				function fileSelected(event:Event):void 
				{
					var stream:FileStream = new FileStream();
					stream.openAsync(event.target as File, FileMode.READ);
					stream.addEventListener(Event.COMPLETE, onOpenJsonStream);
					
				}
			}
			
			protected function onOpenJsonStream(event:Event):void
			{
				// TODO Auto-generated method stub
				var stream:FileStream = event.target as FileStream;
				stream.removeEventListener(Event.COMPLETE, onOpenJsonStream);
				var fileData:String = stream.readUTFBytes(stream.bytesAvailable);
				var arr:Array = JSON.parse(fileData) as Array;
				var len:int = arr.length;
				for(var i:int = 0; i < len; i++)
				{
					var obj:Object = arr[i];
					if(obj.name == "")
					{
						arr.splice(i, 1);
						continue;
					}
					var name:String = obj.name;
					var py:String = "";
					py = PYConvert.convertString(name);
//					py = PYConvert2.convertString(name);
					obj.py = py;
					obj.lat = 40.17 + int(Math.random() * 2 * 1000)/1000 - 1;
					obj.long = 116.39 + int(Math.random() * 2 * 1000)/1000 - 1;
					if(obj.level.indexOf("甲") >= 0)
					{
						obj.level2 = "1";
					}
					else
					{
						obj.level2 = "0";
					}
				}
				
				var str:String = JSON.stringify(arr);
				
				var fn:String = "hospital2.json";
				
				var file:File = File.desktopDirectory.resolvePath(fn);
				var fs:FileStream = new FileStream();
				try
				{
					fs.open(file, FileMode.WRITE);
					fs.writeUTFBytes(str);
				}
				catch(e:Error)
				{
					
				}
				fs.close();
				Alert.show("导出 "+fn+" 完成","提示");
			}
			
			protected function getAllpy_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var fileToOpen:File = File.desktopDirectory.resolvePath("pyall.txt");
				
				var stream:FileStream = new FileStream();
				stream.openAsync(fileToOpen, FileMode.READ);
				stream.addEventListener(Event.COMPLETE, onOpenStream2);
				
				function onOpenStream2(event:Event):void
				{
					// TODO Auto-generated method stub
					stream.removeEventListener(Event.COMPLETE, onOpenStream2);
					var fileData:String = stream.readUTFBytes(stream.bytesAvailable);
					var arr:Array = fileData.split("\n");
					var len:int = arr.length;
					trace(len, arr[0]);
					var list:Array = [];
					for(var i:int = 0; i < len; i++)
					{
						var obj:Object = {};
						var str:String = arr[i];
						var strLen:int = str.length;
						for(var j:int = 0; j < strLen; j++)
						{
							if(PYConvert.isChinese2(str.charAt(j)))
							{
								obj.py = str.substr(0, j);
								obj.hz = str.substr(j);
								break;
							}
						}
						list.push(obj);
					}
					var jsonStr:String = JSON.stringify(list);
					createJsonFile(jsonStr, "pyall");
				}
			}
			
			protected function outputJSON_clickHandler(event:MouseEvent):void
			{
				var txtFilter:FileFilter = new FileFilter("Text", "*.json");
				var fileToOpen:File = new File();
				
				try 
				{
					fileToOpen.browseForOpen("选择json", [txtFilter]);
					fileToOpen.addEventListener(Event.SELECT, fileSelected);
				}
				catch (error:Error)
				{
					trace("Failed:", error.message);
				}
				
				function fileSelected(event:Event):void 
				{
					var stream:FileStream = new FileStream();
					stream.openAsync(event.target as File, FileMode.READ);
					stream.addEventListener(Event.COMPLETE, onOpenJsonStream1);
					
				}
				
				function onOpenJsonStream1(event:Event):void
				{
					// TODO Auto-generated method stub
					var stream:FileStream = event.target as FileStream;
					stream.removeEventListener(Event.COMPLETE, onOpenJsonStream1);
					var fileData:String = stream.readUTFBytes(stream.bytesAvailable);
					var arr:Array = JSON.parse(fileData) as Array;
					var len:int = arr.length;
					for(var i:int = 0; i < len; i++)
					{
						var obj:Object = arr[i];
						if(obj.name == "")
						{
							arr.splice(i, 1);
							continue;
						}
						var name:String = obj.name;
						var py:String = "";
						py = PYConvert.convertString(name);
						obj.py = py;
//						obj.lat = 40.17 + int(Math.random() * 2 * 1000)/1000 - 1;
//						obj.long = 116.39 + int(Math.random() * 2 * 1000)/1000 - 1;
					}
					
					var str:String = JSON.stringify(arr);
					
					var fn:String = "drug2.json";
					
					var file:File = File.desktopDirectory.resolvePath(fn);
					var fs:FileStream = new FileStream();
					try
					{
						fs.open(file, FileMode.WRITE);
						fs.writeUTFBytes(str);
					}
					catch(e:Error)
					{
						
					}
					fs.close();
					Alert.show("导出 "+fn+" 完成","提示");
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Button id="loadCSV" x="10" y="10" label="载入CSV导出JSON" click="loadCSV_clickHandler(event)"/>
	<s:Button id="outputJSON" x="145" y="10" label="导出DrugJSON" click="outputJSON_clickHandler(event)"/>
	<s:DataGrid id="dataGrid" left="10" right="10" top="40" bottom="10" requestedRowCount="4">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="name" headerText="名字"></s:GridColumn>
				<s:GridColumn dataField="price" headerText="列 2"></s:GridColumn>
				<s:GridColumn dataField="isChufang" headerText="列 3"></s:GridColumn>
				<s:GridColumn dataField="drugType" headerText="列 3"></s:GridColumn>
				<s:GridColumn dataField="hasYibao" headerText="列 3"></s:GridColumn>
			</s:ArrayList>
		</s:columns>
		<s:typicalItem>
			<fx:Object dataField1="示例数据" dataField2="示例数据" dataField3="示例数据"></fx:Object>
		</s:typicalItem>
		<s:ArrayList>
			<fx:Object dataField1="数据1" dataField2="数据1" dataField3="数据1"></fx:Object>
			<fx:Object dataField1="数据2" dataField2="数据2" dataField3="数据2"></fx:Object>
			<fx:Object dataField1="数据3" dataField2="数据3" dataField3="数据3"></fx:Object>
			<fx:Object dataField1="数据4" dataField2="数据4" dataField3="数据4"></fx:Object>
		</s:ArrayList>
	</s:DataGrid>
	<s:Button id="exportNamePY" x="258" y="10" label="导出HospitalJSON" click="exportNamePY_clickHandler(event)"/>
	<s:Button id="getAllpy" x="537" y="11" label="获取拼音大全" click="getAllpy_clickHandler(event)"/>
</s:WindowedApplication>
